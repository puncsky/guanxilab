# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ArticleResponse {
  contentHTML: String!
  id: String!
  published: Boolean!
  title: String!
  date: String!
  references: [String!]!
  abstract: String!
  language: String!
  filename: String!
}

type Contact {
  _id: String!
  emails: [String!]
  name: String
  phones: [String!]
  avatarUrl: String
  address: String
  bornAt: DateTime
  bornAddress: String
  knownAt: DateTime
  knownSource: String
  extraversionIntroversion: String
  intuitingSensing: String
  thinkingFeeling: String
  planingPerceiving: String
  tdp: String
  inboundTrust: Float
  outboundTrust: Float
  blurb: String
  workingOn: String
  desire: String
  title: String
  experience: [Experience!]!
  education: [Experience!]!
  linkedin: String
  facebook: String
  createAt: DateTime
  updateAt: DateTime
}

type ContactTag {
  id: String!
  name: String!
  templateId: String!
  ownerId: String!
  rate: Float!
  contactId: String!
  hasRate: Boolean!
  createAt: DateTime!
  updateAt: DateTime!
}

input CreateContactInput {
  _id: String
  emails: [String!]
  name: String
  phones: [String!]
  avatarUrl: String
  address: String
  bornAt: String
  bornAddress: String
  knownAt: DateTime
  knownSource: String
  extraversionIntroversion: String
  intuitingSensing: String
  thinkingFeeling: String
  planingPerceiving: String
  tdp: String
  inboundTrust: Float
  outboundTrust: Float
  blurb: String
  workingOn: String
  desire: String
  title: String
  experience: [ExperienceInput!]
  education: [ExperienceInput!]
  linkedin: String
  facebook: String
  createAt: DateTime
  updateAt: DateTime
}

input CreateTagInput {
  templateId: String!
  contactId: String!
  rate: Float!
}

input CreateTagTemplateInput {
  name: String!
  hasRate: Boolean!
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

input DeleteAccountInput {
  email: String!
}

input DeleteContactInput {
  _id: String!
}

input DeleteNoteInput {
  _id: String!
}

input DeleteTagInput {
  id: String!
}

input DeleteTagTemplateInput {
  id: String!
}

type Experience {
  title: String
  name: String
}

input ExperienceInput {
  title: String
  name: String
}

type Interaction {
  id: String!
  timestamp: DateTime!
  content: String!
  relatedHumans: [String!]!
  public: Boolean
}

type InteractionConnection {
  interactions: [Interaction!]!
  count: Float!
}

type InteractionCount {
  date: String!
  count: Float!
}

type Mutation {
  deleteAccount(deleteAccountInput: DeleteAccountInput!): Boolean!
  createContact(createContactInput: CreateContactInput!): Contact!
  updateContact(updateContactInput: UpdateContactInput!): Contact!
  deleteNote(deleteNoteInput: DeleteNoteInput!): Boolean!
  upsertInteraction(upsertInteraction: UpsertInteraction!): Interaction!
  deleteContact(deleteContactInput: DeleteContactInput!): Boolean!
  createTagTemplate(
    createTagTemplateInput: CreateTagTemplateInput!
  ): TagTemplate!
  createTag(createTagInput: CreateTagInput!): ContactTag!
  deleteTag(deleteTagInput: DeleteTagInput!): Boolean!
  deleteTagTemplate(deleteTagTemplateInput: DeleteTagTemplateInput!): Boolean!
  rateTag(rateTagInput: RateTagInput!): ContactTag!
}

type PlayBook {
  layout: String!
  title: String!
  categories: String!
  language: String!
  references: [String!]!
  meta: String
}

type Query {
  # get the article
  articles(id: String): [ArticleResponse!]

  # get the user
  userProfile(userId: String!): UserProfileResponse
  interactions(
    contactId: String
    isSelf: Boolean
    offset: Float
    limit: Float
  ): InteractionConnection!
  note(id: String!): Interaction
  search(name: String!): [SearchResult!]!
  contacts(offset: Float, limit: Float): [Contact!]
  contact(id: String, userId: String, isSelf: Boolean): Contact
  interactionCounts(isSelf: Boolean, contactId: String): [InteractionCount!]

  # is the server healthy?
  health: String!
  fullContact(
    email: String
    emailHash: String
    twitter: String
    phone: String
  ): String!
  playbookQuery(skip: Float!, limit: Float!): [PlayBook!]!
  getUserTagTemplates: [TagTemplate!]!
  getContactTags(contactId: String!): [ContactTag!]!
}

input RateTagInput {
  id: String!
  rate: Float!
}

type SearchResult {
  name: String!
  path: String!
}

type TagTemplate {
  id: String!
  name: String!
  ownerId: String!
  hasRate: Boolean!
  createAt: DateTime!
  updateAt: DateTime!
}

input UpdateContactInput {
  _id: String!
  emails: [String!]
  name: String
  phones: [String!]
  avatarUrl: String
  address: String
  bornAt: DateTime
  bornAddress: String
  knownAt: DateTime
  knownSource: String
  extraversionIntroversion: String
  intuitingSensing: String
  thinkingFeeling: String
  planingPerceiving: String
  tdp: String
  inboundTrust: Float
  outboundTrust: Float
  blurb: String
  workingOn: String
  desire: String
  title: String
  experience: [ExperienceInput!]!
  education: [ExperienceInput!]!
  linkedin: String
  facebook: String
  createAt: DateTime
  updateAt: DateTime
}

input UpsertInteraction {
  id: String!
  timestamp: DateTime!
  content: String!
  relatedHumans: [String!]!
  public: Boolean
}

type UserProfileResponse {
  email: String!
}
